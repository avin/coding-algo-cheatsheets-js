// ---------------------------------------------------
// üìå –†–µ–∫—É—Ä—Å–∏—è —Å –±–∞–∑–æ–≤—ã–º —Å–ª—É—á–∞–µ–º
// ---------------------------------------------------
function recur(n) {
  if (n === 0) return;
  recur(n - 1);
}


// ---------------------------------------------------
// üìå –ò—Ç–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å—Ç–µ–∫ (DFS)
// ---------------------------------------------------
function dfs(root) {
  const stack = [root];
  while (stack.length > 0) {
    const node = stack.pop();
    if (!node) continue;
    // –æ–±—Ä–∞–±–æ—Ç–∫–∞
    stack.push(node.right);
    stack.push(node.left);
  }
}


// ---------------------------------------------------
// üìå –•–≤–æ—Å—Ç–æ–≤–∞—è —Ä–µ–∫—É—Ä—Å–∏—è (–≤ JS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–±—ã—á–Ω–∞—è)
// ---------------------------------------------------
function tailRec(n, acc = 1) {
  if (n === 0) return acc;
  return tailRec(n - 1, acc * n);
}