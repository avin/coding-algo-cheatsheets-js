// ---------------------------------------------------
// üìå –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
// ---------------------------------------------------

// ---------------------------------------------------
// üìå –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
// ---------------------------------------------------
const obj = {}; // –ª–∏—Ç–µ—Ä–∞–ª
const obj2 = new Object(); // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä

// ---------------------------------------------------
// üìå –î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º
// ---------------------------------------------------
const person = { name: "–ò–≤–∞–Ω", age: 25 };
console.log(person.name);    // —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É
console.log(person["age"]);  // —á–µ—Ä–µ–∑ —Å–∫–æ–±–∫–∏

// ---------------------------------------------------
// üìå –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
// ---------------------------------------------------
const { name, age } = person;
const { name: firstName, height = 180 } = person; // –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

// ---------------------------------------------------
// üìå –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–±—ä–µ–∫—Ç—É
// ---------------------------------------------------
for (const key in person) {
  if (person.hasOwnProperty(key)) {
    console.log(key, person[key]);
  }
}
Object.keys(person).forEach(key => console.log(key, person[key]));
Object.values(person).forEach(value => console.log(value));
Object.entries(person).forEach(([key, value]) => console.log(key, value));

// ---------------------------------------------------
// üìå –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ / –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
// ---------------------------------------------------
const defaults = { active: true, role: "user" };
const settings = { role: "admin", theme: "dark" };
const merged1 = Object.assign({}, defaults, settings);
const merged2 = { ...defaults, ...settings };

// ---------------------------------------------------
// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–≤–æ–π—Å—Ç–≤–∞
// ---------------------------------------------------
"role" in settings;               // true
settings.hasOwnProperty("theme"); // true

// ---------------------------------------------------
// üìå –ó–∞–º–æ—Ä–æ–∑–∫–∞ –∏ –∑–∞–ø–µ—á–∞—Ç—ã–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
// ---------------------------------------------------
Object.freeze(person); // –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (–Ω–æ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ)
Object.seal(person);   // –∑–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è

// ---------------------------------------------------
// üìå –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞
// ---------------------------------------------------
const pureObject = Object.create(null);
pureObject.custom = 123;

// ---------------------------------------------------
// üìå –ü—Ä–æ—á–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
// ---------------------------------------------------
Object.getPrototypeOf(person);      // –ø—Ä–æ—Ç–æ—Ç–∏–ø
Object.defineProperty(person, "id", { value: 1, writable: false, configurable: false });
delete person.id;                   // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ configurable: false