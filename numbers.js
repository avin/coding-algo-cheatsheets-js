// üìå –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ
Math.round(x); // –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ
Math.ceil(x);  // –≤–≤–µ—Ä—Ö
Math.floor(x); // –≤–Ω–∏–∑

// üìå –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Å—Ç–∞—Ç–æ–∫
Math.trunc(x); // –æ–±—Ä–µ–∑–∞–µ—Ç –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å
x % y;         // –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è

// üìå –ó–Ω–∞–∫–∏ –∏ –º–æ–¥—É–ª—å
-Math.abs(x);  // –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
Math.abs(x);   // –º–æ–¥—É–ª—å
Math.sign(x);  // -1, 0, 1

// üìå –î–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª
const range = Array.from({ length: n }, (_, i) => i + start);

// üìå –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
const str = String(val);
const num = Number(str);   // –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ
const num2 = +str;         // –±—ã—Å—Ç—Ä–µ–µ, –Ω–æ –º–µ–Ω–µ–µ —á–∏—Ç–∞–µ–º–æ